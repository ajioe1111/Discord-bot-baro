import * as Discord from 'discord.js'
import { client, hubID, logChannel } from '../bot.js';
import * as fs from 'fs'

let database = JSON.parse(fs.readFileSync("./list.json"));


function coolDown(experienceGainDate) {
    // 1800000 —ç—Ç–æ –ø–æ–ª —á–∞—Å–∞
    let difference = new Date() - experienceGainDate;
    if (difference >= 1800000) {
        return true;
    }
    else { return false; }
}

/**
 * 
 * @param {*} count 
 * @param {Discord.Message} message 
 * @param {Discord.User} userID 
 */
export function xpAdd(count, userID, channel) {
    if (!Number.isInteger(count)) {
        logChannel.send('–û—à–∏–±–∫–∞! –Ω—É–∂–Ω–æ –≤–≤–µ—Å—Ç–∏ —á–∏—Å–ª–æ !xp add –ß–ò–°–õ–û –ë–õ–≠–ê–¢–¨');
        return;
    } 
    let errorMsg = ["@everyone –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –≤ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –æ–ø—ã—Ç–∞!"]
    for (let i = 0; i < userID.length; i++) {
        let ID = userID[i];
        let userIndex = database.users_list.findIndex(user => user.id == ID);
        if (userIndex != -1) {
            errorMsg.push(`<@${ID}> –ø–æ–ª—É—á–∏–ª(–∞) –æ–ø—ã—Ç!`);
        }
        if (userIndex == -1) {
            logChannel.send(errorMsg);
            fs.writeFileSync("./list.json", JSON.stringify(database));
            return;
        };
        database.users_list[userIndex].properties.experienceGainDate = new Date();
        let xpCount = database.users_list[userIndex].properties.xp + count;
        if (xpCount >= 10656) { // 10656 –¥–∞ 48 —á–∞—Å–æ–≤
            let step = database.users_list[userIndex].properties.stepToCoin + 1;
            database.users_list[userIndex].properties.stepToCoin = database.users_list[userIndex].properties.stepToCoin + 1;
            database.users_list[userIndex].properties.level = database.users_list[userIndex].properties.level + 1;
            database.users_list[userIndex].properties.xp = 0;
            let msg = [`<@${ID}>\nüìà –¢—ã –ø–æ–ª—É—á–∏–ª ${database.users_list[userIndex].properties.level} —É—Ä–æ–≤–µ–Ω—å! —Ç–∞–∫ –¥–µ—Ä–∂–∞—Ç—å! üìà`];
            if (step >= 5) {
                database.users_list[userIndex].properties.stepToCoin = 0;
                database.users_list[userIndex].properties.coin = database.users_list[userIndex].properties.coin + 1;
                msg.push(`–ò –∑–∞—Ä–∞–±–æ—Ç–∞–ª —Ü–µ–ª—ã–π –≥–µ–º!\n–¢–µ–ø–µ—Ä—å —É —Ç–µ–±—è **${database.users_list[userIndex].properties.coin}** üíé`);
            }
            channel.send(msg);
        } else {
            database.users_list[userIndex].properties.xp = database.users_list[userIndex].properties.xp + count;
        }
    }
    fs.writeFileSync("./list.json", JSON.stringify(database));
}

export function xpRemove(count, userID, channel) {
    let errorMsg = ["@everyone –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –≤ —É–¥–∞–ª–µ–Ω–∏–µ –æ–ø—ã—Ç–∞!"]
    for (let i = 0; i < userID.length; i++) {
        let ID = userID[i];
        let userIndex = database.users_list.findIndex(user => user.id == ID);
        if (userIndex != -1) {
            errorMsg.push(`<@${ID}> –±—ã–ª —É–¥–∞–ª–µ–Ω –æ–ø—ã—Ç!`);
        }
        if (userIndex == -1) {
            logChannel.send(errorMsg);
            fs.writeFileSync("./list.json", JSON.stringify(database));
            return;
        }
        let xpCount = database.users_list[userIndex].properties.xp - count;
        if (xpCount <= 0) {
            let checkLevel = database.users_list[userIndex].properties.level - 1;
            if (checkLevel <= 0) {
                database.users_list[userIndex].properties.level = 0;
                database.users_list[userIndex].properties.stepToCoin = 5;
                database.users_list[userIndex].properties.coin = 0;
                channel.send(`<@${ID}> –¢–≤–æ–π —É—Ä–æ–≤–µ–Ω—å –ø—Ä–æ–ø–∞–ª! :O –∫–∞–∫ —Ç—ã —ç—Ç–æ —Å–¥–µ–ª–∞–ª?!`);
            } else {
                database.users_list[userIndex].properties.level = database.users_list[userIndex].properties.level - 1;
                channel.send(`<@${ID}> –¢–≤–æ–π —É—Ä–æ–≤–µ–Ω—å –±—ã–ª –ø–æ–Ω–∏–∂–µ–Ω! ;(`);
            }
            database.users_list[userIndex].properties.xp = 0;
            let step = database.users_list[userIndex].properties.stepToCoin;
            if (step == 0) {
                if (database.users_list[userIndex].properties.coin <= 0) {
                    database.users_list[userIndex].properties.coin = 0;
                }
                database.users_list[userIndex].properties.coin = database.users_list[userIndex].properties.coin - 1;
                channel.send(`<@${ID}> –¢—ã —É—Ä–æ–Ω–∏–ª –≥–µ–º D: NOOOOO~!`);
                database.users_list[userIndex].properties.stepToCoin = 5;
            } else {
                database.users_list[userIndex].properties.stepToCoin = database.users_list[userIndex].properties.stepToCoin - 1;
            }

        } else {
            database.users_list[userIndex].properties.xp = database.users_list[userIndex].properties.xp - count;
        }
    }
    fs.writeFileSync("./list.json", JSON.stringify(database));
}


export function xpControl(message) {
    database = JSON.parse(fs.readFileSync("./list.json"));
    let userIndex = database.users_list.findIndex(user => user.id == message.author.id);
    if (userIndex == -1) {
        message.reply(`–û—à–∏–±–∫–∞ –≤ –ø–æ–ª—É—á–µ–Ω–∏–∏ –æ–ø—ã—Ç–∞! –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É!`);
        console.log(`–û—à–∏–±–∫–∞ –≤ —Ñ—É–Ω–∫—Ü–∏–∏ xpContorl. userIndex –Ω–µ –Ω–∞–π–¥–µ–Ω!`);
        return;
    }
    let experienceGainDate = new Date(database.users_list[userIndex].properties.experienceGainDate);
    let getIt = coolDown(experienceGainDate);
    let userID = [message.author.id];
    let channel = message.channel;
    if (getIt) {
        xpAdd(111, userID, channel);
    }
}

/**
 * 
 * @param {Discord.Message} message 
 */
export function myLevel(message) {
    let userIndex = database.users_list.findIndex(user => user.id == message.author.id);
    let level = database.users_list[userIndex].properties.level;
    let xp = database.users_list[userIndex].properties.xp;
    let nextLevel = 10656 - database.users_list[userIndex].properties.xp;
    let nextCoin = 5 - database.users_list[userIndex].properties.stepToCoin;
    let gemText;
    if (nextCoin == 5 || nextCoin == 0) {
        gemText = '—É—Ä–æ–≤–Ω–µ–π';
    } else if (nextCoin < 5 && nextCoin > 1) {
        gemText = '—É—Ä–æ–≤–Ω—è';
    } else if (nextCoin == 1) {
        gemText = '—É—Ä–æ–≤–µ–Ω—å';
    }
    const embed = new Discord.MessageEmbed()
        .setColor('#00ffff')
        .setDescription('–¢–≤–æ—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è')
        .setAuthor(message.author.username, message.author.displayAvatarURL())
        .setThumbnail(message.author.displayAvatarURL())
        .addFields(
            { name: '–£—Ä–æ–≤–µ–Ω—å', value: `${level} üìà`, inline: true },
            { name: '–û–ø—ã—Ç', value: `${xp}/10656`, inline: true },
            { name: '–ù–æ–≤—ã–π —É—Ä–æ–≤–µ–Ω—å —á–µ—Ä–µ–∑', value: `${nextLevel} –æ–ø—ã—Ç–∞`, inline: true },
            { name: '–ì–µ–º–æ–≤ –Ω–∞ —Å—á–µ—Ç—É', value: `${database.users_list[userIndex].properties.coin} üíé`, inline: true },
            { name: '–ì–µ–º —á–µ—Ä–µ–∑', value: `${nextCoin} ${gemText}`, inline: true },
        )
        .setTimestamp()
        .setFooter('–°–∏—Å—Ç–µ–º–∞ –∫–∞–∑–Ω–∞—á–µ–π', 'https://media.discordapp.net/attachments/573490270025416714/841041056182960139/favpng_flame-shield.png?width=599&height=676');

    message.reply(embed);
}


/**
 * 
 * @param {Discord.Message} message 
 * @param {*} args 
 */
export function setCoin(message, args) {
    const targetUser = args[0];
    const targetCoin = Number(args[1]);
    const findHub = client.guilds.cache.find(guild => guild.id == hubID);
    const member = findHub.members.cache.find(member => member.id == targetUser);
    if (!member) { message.reply(`–Ø –Ω–µ —Å–º–æ–≥ –Ω–∞–π—Ç–∏ —é–∑–µ—Ä–∞ —Å ID ${targetUser}`) };
    database = JSON.parse(fs.readFileSync("./list.json"));
    const userIndex = database.users_list.findIndex(user => user.id == targetUser);
    if (userIndex == -1) {
        message.reply('–û—à–∏–±–∫–∞ –≤ –∫–æ–º–∞–Ω–¥–µ setcoin (ID –Ω–µ –Ω–∞–π–¥–µ–Ω)');
        return;
    }
    database.users_list[userIndex].properties.coin = targetCoin;
    fs.writeFileSync("./list.json", JSON.stringify(database));
    const embed = new Discord.MessageEmbed()
        .setColor('#800080')
        .setTitle('–£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –Ω–æ–≤–æ–µ –∫–æ–ª-–≤–æ coin\' —É —é–∑–µ—Ä–∞!')
        .setDescription(`–ò–Ω–∏—Ü–∏–∞—Ç–æ—Ä –∫–æ–º–∞–Ω–¥—ã ${message.author}`)
        .addFields(
            { name: '–Æ–∑–µ—Ä', value: `<@${member.id}>`, inline: true },
            { name: '–ò–∑–º–µ–Ω–µ–Ω–æ –Ω–∞', value: targetCoin, inline: true },
        )

    logChannel.send(embed);
}